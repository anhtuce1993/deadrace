################################################################################
#
# Makefile to compile and link C programs with MPI subroutines
#
# Version valid for Linux machines with MPICH
#
# "make" compiles and links the specified main programs and modules, 
# using the specified libraries (if any), and produces the executables
#
# "make clean" removes all files generated by "make"
#
# Dependencies on included files are automatically taken care of
#
################################################################################

all: rmxeq mkdep mkxeq
.PHONY: all


# main programs and modules to be compiled 
 
MAIN = check1 check2 check3 check4 check5

RANDOM = ranlxs ranlxd gauss random_su3

START = geometry parms start sinit ucom utils 

MISC = cmatrix_dble su3_fcts su3_prods 

MODULES = $(RANDOM) $(START) $(MISC)


# Logging option (-mpilog or -mpitrace or -mpianim)

LOGOPTION =


# search path for modules

MDIR = ../../modules

VPATH = .:$(MDIR)/random:$(MDIR)/flags:$(MDIR)/start:$(MDIR)/linalg:\
          $(MDIR)/misc:$(MDIR)/sw_term:$(MDIR)/dirac:


# additional include directories

INCPATH = $(MPIR_HOME)/include ../../include /home/anhtu/mismatch/inc


# additional libraries
 
LIBS = m

LIBPATH = $(MPIR_HOME)/lib


# scheduling and optimization options

CFLAGS = -std=c89 -O -DSSE3 -DPM
#CFLAGS = -O -DSSE3 -DPM



############################## do not change ###################################

SHELL=/bin/bash
#CC=$(MPIR_HOME)/bin/mpicc
CC=mpicc
#CLINKER=$(CC) 
CLINKER=mpicxx 

PGMS= $(MAIN) $(MODULES)

-include $(addsuffix .d,$(PGMS))


# rule to make dependencies

$(addsuffix .d,$(PGMS)): %.d: %.c Makefile
	@ $(CC) -ansi $< -MM $(addprefix -I,$(INCPATH)) -o $@


# rule to compile source programs

$(addsuffix .o,$(PGMS)): %.o: %.c Makefile
	$(CC) $< -c $(CFLAGS) $(LOGOPTION) $(addprefix -I,$(INCPATH))


# rule to link object files

$(MAIN): %: %.o $(addsuffix .o,$(MODULES)) Makefile
	$(CLINKER) -I/home/anhtu/mismatch/inc $< $(addsuffix .o,$(MODULES)) $(CFLAGS) $(LOGOPTION) /home/anhtu/mismatch/libtest.a \
        $(addprefix -L,$(LIBPATH)) $(addprefix -l,$(LIBS)) -o $@


# produce executables

mkxeq: $(MAIN)


# remove old executables

rmxeq:
	@ -rm -f $(MAIN); \
        echo "delete old executables"		


# make dependencies

mkdep:  $(addsuffix .d,$(PGMS))
	@ echo "generate tables of dependencies"


# clean directory 

clean:
	@ -rm -rf *.d *.o *.alog *.clog *.slog $(MAIN)
.PHONY: clean
 
################################################################################
